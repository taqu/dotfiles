
# vim-ailrline
[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']

# vim-airline-themes
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

# vim-commentary
[[plugins]]
repo = 'tpope/vim-commentary'

# NERDTree
[[plugins]]
repo = 'preservim/nerdtree'

# color theme 
[[plugins]]
repo = 'yasukotelin/shirotelin'
[[plugins]]
repo = 'sjl/badwolf'

# vim-operator-user
[[plugins]]
repo = 'kana/vim-operator-user'

# vim-clang-format
#[[plugins]]
#repo = 'rhysd/vim-clang-format'

# vim-fugitive
[[plugins]]
repo = 'tpope/vim-fugitive'

# sonictemplate
[[plugins]]
repo = 'mattn/sonictemplate-vim'

# vim-surround
[[plugins]]
repo = 'tpope/vim-surround'

# vim-lsp
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
if executable('clangd')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'clangd',
        \ 'cmd': {server_info->['clangd']},
        \ 'allowlist': ['c', 'cpp'],
        \ })
endif

let g:lsp_diagnostics_enabled = 0
let g:lsp_auto_enable = 1
let g:lsp_preview_keep_focus = 0
let g:lsp_preview_float = 1
let g:lsp_preview_autoclose = 1
let g:lsp_insert_text_enabled = 1
let g:lsp_text_edit_enabled = 1
let g:lsp_documentation_float = 1
let g:lsp_diagnostics_echo_cursor = 0
let g:lsp_diagnostics_float_cursor = 0
let g:lsp_signs_enabled = 0
let g:lsp_fold_enabled = 1
let g:lsp_semantic_enabled = 0

let g:lsp_log_verbose = 0
" let g:lsp_log_file = ''
'''

